#!/command/with-contenv sh
# shellcheck shell=sh

set -eu

echo "[SERVICE-NORDVPND] Starting nordvpnd service..."

# Paths (same as your original)
wgfile="/etc/wireguard/wg0.conf"
NETWORK_DIAGNOSTIC_ENABLED="${NETWORK_DIAGNOSTIC_ENABLED:-false}"

. /usr/local/bin/backend-functions

vpn-config

# -------- parse the single 'Endpoint' line --------
endpoint_line="$(awk '/^[[:space:]]*Endpoint[ \t]*=/ {print; exit}' "$wgfile")"
[ -n "$endpoint_line" ] || { echo "[SERVICE-NORDVPND] CRITICAL ERROR: No 'Endpoint' line in $wgfile - sleeping infinite" >&2; sleep infinity; }

endpoint_value="$(echo "$endpoint_line" | sed 's/.*= *//' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')"
r_ip_raw="$(echo "$endpoint_value" | cut -d: -f1)"
# Clean up any bracketed IPv6 (just in case)
r_ip="$(echo "$r_ip_raw" | sed 's,^\[,,' | sed 's,\]$,,' )"

# -------- add a single temporary pinhole on eth0 --------

PIN_SPEC="-A VPN-SERVER -o eth0 -d ${r_ip} -j ACCEPT"
if run4 $PIN_SPEC 2>/dev/null; then
    echo "[SERVICE-NORDVPND] pinhole added: $IPT $PIN_SPEC"
fi

echo "[SERVICE-NORDVPND] launching Wireguard..."
wg-quick down wg0 || true
wg-quick up wg0

# Wait for VPN connection
echo "[SERVICE-NORDVPND] Waiting for VPN connection..."
counter=0
while ! is_vpn_connected && [ $counter -lt 30 ]; do
    sleep 2
    counter=$((counter + 1))
done

if is_vpn_connected; then
    echo "[SERVICE-NORDVPND] VPN connected successfully"
    # Run network diagnostic if enabled
    if [ "$NETWORK_DIAGNOSTIC_ENABLED" = "true" ] || [ "$NETWORK_DIAGNOSTIC_ENABLED" = "1" ]; then
        echo "[SERVICE-NORDVPND] Running network diagnostic..."
        network-diagnostic
    fi
else
    echo "[SERVICE-NORDVPND] VPN connection timeout"
fi

# Keep the s6 service running indefinitely
sleep infinity
